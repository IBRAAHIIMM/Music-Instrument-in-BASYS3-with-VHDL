library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.STD_LOGIC_UNSIGNED.ALL;
use IEEE.NUMERIC_STD.ALL;

entity VGA_FSM is
    Port (clk_note : in STD_LOGIC;
          clk : in STD_LOGIC;
          play_enable: in STD_LOGIC;
          note : in STD_LOGIC_VECTOR(6 downto 0);
          vga_red,vga_blue,vga_green : out STD_LOGIC_VECTOR(3 DOWNTO 0);
          vPos,hPos : in integer;
          HSYNC,VSYNC : out STD_LOGIC;
          rst : in STD_LOGIC);
end VGA_FSM;
architecture Behavioral of VGA_FSM is


type vertical is array(12 downto 0) of integer;
signal vertical_data : vertical := (750, 700, 650, 600, 550, 500, 450, 400, 350, 300, 250, 200, 150);
                               
type vga_state is (initial,up_1,up_2,up_1_2);

signal videoOnA,videoOnG,videoOnB,videoOnC,videoOnF,videoOnE,videoOnD: std_logic := '0';
signal stateA,stateB,stateC,stateD,stateE,stateF,stateG : vga_state := initial;
signal next_stateA,next_stateB,next_stateC,next_stateD,next_stateE,next_stateF,next_stateG:vga_state;
    signal indexA : integer range 0 to 12 := 12;
    signal index1A : integer range 0 to 12 := 12;
    signal indexB : integer range 0 to 12 := 12;
    signal index1B : integer range 0 to 12 := 12;
    signal indexC : integer range 0 to 12 := 12;
    signal index1C : integer range 0 to 12 := 12;
    signal indexD : integer range 0 to 12 := 12;
    signal index1D : integer range 0 to 12 := 12;
    signal indexE : integer range 0 to 12 := 12;
    signal index1E : integer range 0 to 12 := 12;
    signal indexF : integer range 0 to 12 := 12;
    signal index1F : integer range 0 to 12 := 12;   
    signal indexG : integer range 0 to 12 := 12;
    signal index1G : integer range 0 to 12 := 12;   
    signal counter : integer := 0;
    signal note_playedC,note_playedD,note_playedE,note_playedF,note_playedG,note_playedA,note_playedB:STD_LOGIC_VECTOR(6 DOWNTO 0);
    signal instable_vpos_1_E,instable_vpos_2_E : integer;
    signal instable_vpos_1_F,instable_vpos_2_F : integer;
    signal instable_vpos_1_G,instable_vpos_2_G : integer;
    signal instable_vpos_1_A,instable_vpos_2_A : integer;
    signal instable_vpos_1_B,instable_vpos_2_B : integer;
    signal instable_vpos_1_C,instable_vpos_2_C: integer;
    signal instable_vpos_1_D,instable_vpos_2_D : integer; 
    signal action_A,action_B,action_C,action_D,action_E,action_F,action_G: STD_LOGIC;
type note288x30 is array(0 to 28) of std_logic_vector(0 to 287);
signal note_name : note288x30 := (('1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1'),



('1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','0','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','0','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1'),
('1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','0','0','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','0','0','0','0','0','0','0','0','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','0','0','0','0','0','0','0','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','0','0','0','0','0','0','0','0','0','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','0','0','0','0','0','0','0','0','0','0','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','0','0','0','0','0','0','0','0','0','0','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','0','0','0','0','0','0','0','0','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1'),
('1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','0','0','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','0','0','0','0','0','0','0','0','0','0','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','0','0','0','0','0','0','0','0','0','0','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','0','0','0','0','0','0','0','0','0','0','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','0','0','0','0','0','0','0','0','0','0','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','0','0','0','0','0','0','0','0','0','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','0','0','0','0','0','0','0','0','0','0','0','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1'),
('1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','0','0','0','0','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','0','0','0','1','1','1','1','1','1','0','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','0','0','0','0','0','1','1','1','1','1','0','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','0','0','0','1','1','1','1','1','1','0','0','0','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','0','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','0','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','0','0','0','0','1','1','1','1','1','1','1','0','0','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1'),
('1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','0','0','1','0','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','0','0','0','1','1','1','1','1','1','1','0','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','0','0','0','1','1','1','1','1','1','1','1','1','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','0','0','0','1','1','1','1','1','1','1','1','0','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','0','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','0','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','0','0','0','0','1','1','1','1','1','1','1','1','1','1','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1'),
('1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','0','0','0','1','0','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','0','0','0','1','1','1','1','1','1','1','0','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','0','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','0','0','0','1','1','1','1','1','1','1','1','1','0','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','0','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','0','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','0','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1'),
('1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','0','0','0','1','1','0','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','0','0','0','1','1','1','1','1','1','1','0','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','0','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','0','0','0','1','1','1','1','1','1','1','1','1','0','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','0','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','0','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','0','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1'),
('1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','0','0','1','1','1','0','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','0','0','0','1','1','1','1','1','1','1','0','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','0','0','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','0','0','0','1','1','1','1','1','1','1','1','1','1','0','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','0','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','0','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','0','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1'),
('1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','0','0','0','1','1','1','1','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','0','0','0','1','1','1','1','1','1','0','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','0','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','0','0','0','1','1','1','1','1','1','1','1','1','1','0','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','0','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','0','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','0','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1'),
('1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','0','0','0','1','1','1','1','0','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','0','0','0','1','1','1','1','1','0','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','0','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','0','0','0','1','1','1','1','1','1','1','1','1','1','0','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','0','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','0','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','0','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1'),
('1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','0','0','1','1','1','1','1','0','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','0','0','0','0','0','0','0','0','0','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','0','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','0','0','0','1','1','1','1','1','1','1','1','1','1','0','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','0','0','0','0','0','0','0','0','0','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','0','0','0','0','0','0','0','0','0','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','0','0','0','1','1','1','1','1','1','0','0','0','0','0','0','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1'),
('1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','0','0','0','1','1','1','1','1','1','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','0','0','0','0','0','0','0','0','0','0','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','0','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','0','0','0','1','1','1','1','1','1','1','1','1','1','0','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','0','0','0','0','0','0','0','0','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','0','0','0','0','0','0','0','0','0','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','0','0','0','1','1','1','1','1','1','0','0','0','0','0','0','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1'),
('1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','0','0','0','1','1','1','1','1','1','0','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','0','0','0','1','1','1','1','1','1','0','0','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','0','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','0','0','0','1','1','1','1','1','1','1','1','1','1','0','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','0','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','0','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','0','0','0','1','1','1','1','1','1','1','0','0','0','1','0','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1'),
('1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','0','0','1','1','1','1','1','1','1','0','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','0','0','0','1','1','1','1','1','1','1','0','0','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','0','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','0','0','0','1','1','1','1','1','1','1','1','1','1','0','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','0','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','0','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','0','0','0','1','1','1','1','1','1','1','1','1','1','1','1','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1'),
('1','1','1','1','1','1','1','1','1','1','1','1','1','1','0','0','0','0','0','0','0','0','0','0','0','0','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','0','0','0','1','1','1','1','1','1','1','1','0','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','0','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','0','0','0','1','1','1','1','1','1','1','1','1','1','0','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','0','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','0','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','0','0','0','1','1','1','1','1','1','1','1','1','1','1','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1'),
('1','1','1','1','1','1','1','1','1','1','1','1','1','1','0','0','0','0','0','0','0','0','0','0','0','0','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','0','0','0','1','1','1','1','1','1','1','1','0','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','0','0','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','0','0','0','1','1','1','1','1','1','1','1','1','0','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','0','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','0','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','0','0','0','1','1','1','1','1','1','1','1','1','1','1','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1'),
('1','1','1','1','1','1','1','1','1','1','1','1','1','0','0','0','1','1','1','1','1','1','1','1','1','0','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','0','0','0','1','1','1','1','1','1','1','1','0','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','0','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','0','0','0','1','1','1','1','1','1','1','1','1','0','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','0','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','0','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','0','0','0','0','1','1','1','1','1','1','1','1','1','1','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1'),
('1','1','1','1','1','1','1','1','1','1','1','1','1','0','0','0','1','1','1','1','1','1','1','1','1','1','0','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','0','0','0','1','1','1','1','1','1','1','1','0','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','0','0','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','0','0','0','1','1','1','1','1','1','1','1','0','0','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','0','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','0','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','0','0','0','1','1','1','1','1','1','1','1','1','1','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1'),
('1','1','1','1','1','1','1','1','1','1','1','1','1','0','0','0','1','1','1','1','1','1','1','1','1','1','0','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','0','0','0','1','1','1','1','1','1','1','0','0','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','0','0','0','0','1','1','1','1','1','1','1','1','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','0','0','0','1','1','1','1','1','1','1','0','0','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','0','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','0','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','0','0','0','0','1','1','1','1','1','1','1','1','1','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1'),
('1','1','1','1','1','1','1','1','1','1','1','1','0','0','0','1','1','1','1','1','1','1','1','1','1','1','0','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','0','0','0','1','0','0','0','0','0','0','0','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','0','0','0','0','0','0','1','1','1','0','0','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','0','0','0','0','0','0','0','0','0','0','0','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','0','0','0','0','0','0','0','0','0','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','0','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','0','0','0','0','0','0','1','1','1','1','0','0','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1'),
('1','1','1','1','1','1','1','1','1','1','1','1','0','0','0','1','1','1','1','1','1','1','1','1','1','1','1','0','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','0','0','0','0','0','0','0','0','0','0','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','0','0','0','0','0','0','0','0','0','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','0','0','0','0','0','0','0','0','0','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','0','0','0','0','0','0','0','0','0','0','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','0','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','0','0','0','0','0','0','0','0','0','0','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1'),
('1','1','1','1','1','1','1','1','1','1','1','1','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','0','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','0','0','0','0','0','0','0','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','0','0','0','0','0','0','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','0','0','0','0','0','0','0','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','0','0','0','0','0','0','0','0','0','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','0','0','0','0','0','0','0','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1'),



begin

video_on:process(clk_note, RST, hPos, vPos,play_enable)
begin
	if(RST = '1')then
		   videoOnA <='0';
           videoOnG <= '0';
           videoOnB <='0';
           videoOnC <='0';
           videoOnF<='0';
           videoOnE <='0'; 
           videoOnD <= '0';
	elsif(clk_note'event and clk_note = '1') and play_enable = '1' then
		   case note is
		   when "1000000" => videoOnC <= '1'; 
		          counter <= counter + 1;
		   when "0100000" => videoOnD <= '1';
		          counter <= counter + 1;
		   when "0010000" => videoOnE <= '1';
		          counter <= counter + 1;
		   when "0001000" => videoOnF<= '1';
		          counter <= counter + 1;
		   when "0000100" => videoOnG <= '1';
		          counter <= counter + 1;
		   when "0000010" => videoOnA <= '1';
		          counter <= counter + 1;
		   when "0000001" => videoOnB <= '1';
		          counter <= counter + 1;
		   when others =>
		          videoOnA <='0';
		          videoOnG <= '0';
		          videoOnB <='0';
		          videoOnC <='0';
		          videoOnF<='0';
		          videoOnE <='0'; 
		          videoOnD <= '0';
		          counter <= 0 ;
		   end case;
	end if;
end process;
----------------AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA-----------------------------

stateA_processA: process(stateA,clk_note)
begin 
if rising_edge(clk_note) and play_enable = '1'  then

    next_stateA <= stateA;
    case stateA is
    when initial => 
--        x <= "11";
        indexA <= 12;
        index1A <= 12;
        action_A <= '0';
        if videoOnA = '1' then
            stateA <= up_1;
        end if;
    when up_1 =>
  --      x <= "10";
        indexA <= indexA -1;
        action_A <= '1';
        if videoOnA = '1' then
            if indexA = 0 then
                indexA <= 0;
            end if;
        else
            if (videoOnA = '0' and indexA = 0) then
                stateA <= up_2;
            elsif (videoOnA = '0' and indexA /= 0 ) then
                stateA <= up_1_2;
            end if;
        end if;
    when up_2 => 
        
        action_A <= '1';
        indexA <= 0;
--         x <= "01";
        if (videoOnA = '0' and index1A /= 0) then
             index1A <= index1A - 1;
        else
             stateA <= initial;
        end if;   
    when up_1_2 => 
 --      x <= "00";
        if  (videoOnA = '0' and indexA /= 0) then
            stateA <= up_1_2;
              indexA <= indexA -1;
              index1A <= index1A - 1;
              action_A <= '1';
        elsif (videoOnA = '0' and indexA = 0) then
            stateA<= up_2;
        end if;
    end case;
end if;
end process;


--------------------------------------BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB---------------------------------------
stateB_process: process(stateB,clk_note)
begin 
if rising_edge(clk_note) and play_enable = '1'  then
    next_stateB <= stateB;
    case stateB is
    when initial => 
        indexB <= 12;
        index1B <= 12;
        action_B <= '0';
        if videoOnB = '1' then
           stateB <= up_1;
        end if;
    when up_1 =>
        indexB <= indexB -1;
        action_B <= '1';
        if videoOnB = '1' then
             if indexB = 0 then
                 indexB <= 0;
             end if;
        else
            if (videoOnB = '0' and indexB = 0) then
                stateB <= up_2;
            elsif (videoOnB = '0' and indexB /= 0 ) then
                stateB <= up_1_2;
            end if;
        end if;
    when up_2 => 
        indexB <= 0;
        if (videoOnB = '0' and index1B > 0) then
            stateB <= up_2;
            index1B <= index1B- 1;
            action_B <= '1';
        elsif (videoOnB = '0' and index1B = 0) then 
            stateB <= initial;
        end if;
    when up_1_2 => 
        if  (videoOnB = '0' and indexB /= 0) then
            stateB <= up_1_2;
              indexB <= indexB -1;
              index1B <= index1B - 1;
              action_B <= '1';
        elsif (videoOnB = '0' and indexB = 0) then
            stateB<= up_2;
        end if;
    end case;
end if;
end process;


-------------------------------------CCCCCCCCCCCCCCCCCCCCCC--------------------------------
statec_processC: process(stateC,clk_note)
begin 
if rising_edge(clk_note) and play_enable = '1'  then
    next_stateC <= stateC;
    case stateC is
    when initial => 
        indexC <= 12;
        index1C <= 12;
        action_C <= '0';
        if videoOnC = '1' then
            stateC <= up_1;
        end if;
    when up_1 =>
        indexC <= indexC -1;
        action_C <= '1';
        if videoOnC = '1' then
            if indexC = 0 then
                indexC <= 0;
            end if;
        else
            if (videoOnC = '0' and indexC = 0) then
                stateC <= up_2;
            elsif (videoOnC = '0' and indexC /= 0 ) then
                stateC <= up_1_2;
            end if;
        end if;
    when up_2 => 
        indexC <= 0;
        if (videoOnC = '0' and index1C > 0) then
            stateC <= up_2;
            index1C <= index1C- 1;
            action_C <= '1';
        elsif (videoOnC = '0' and index1C = 0) then 
            stateC <= initial;
        end if;
    when up_1_2 => 
        if  (videoOnC = '0' and indexC /= 0) then
            stateC <= up_1_2;
              indexC <= indexC -1;
              index1C <= index1C - 1;
              action_C <= '1';
        elsif (videoOnC = '0' and indexC = 0) then
            stateC<= up_2;
        end if;
    end case;
end if;
end process;
------------------------------------------DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD---------------------
statec_processD: process(stateD,clk_note)
begin 
if rising_edge(clk_note) and play_enable = '1'  then
    next_stateD <= stateD;
    case stateD is
    when initial => 
        indexD <= 12;
        index1D <= 12;
        action_D <= '0';
        if videoOnD = '1' then
            stateD <= up_1;
        end if;
    when up_1 =>
        indexD <= indexD -1;
        action_D <= '1';
        if videoOnD = '1' then
            if indexD = 0 then
                indexD <= 0;
            end if;
        else
            if (videoOnD = '0' and indexD = 0) then
                stateD <= up_2;
            elsif (videoOnD = '0' and indexD /= 0 ) then
                stateD <= up_1_2;
            end if;
        end if;
    when up_2 => 
        indexD <= 0;
        if (videoOnD = '0' and index1D > 0) then
            stateD <= up_2;
            index1D <= index1D- 1;
            action_D <= '1';
        elsif (videoOnD = '0' and index1D = 0) then 
            stateD <= initial;
        end if;
    when up_1_2 => 
        if  (videoOnD = '0' and indexD /= 0) then
            stateD <= up_1_2;
              indexD <= indexD -1;
              index1D <= index1D - 1;
              action_D <= '1';
        elsif (videoOnD = '0' and indexD = 0) then
            stateD<= up_2;
        end if;
    end case;
end if;
end process;
----------------------------------------- EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE---------------------------
statec_processE: process(stateE,clk_note)
begin 
if rising_edge(clk_note) and play_enable = '1' then
    next_stateE <= stateE;
    case stateE is
    when initial => 
        indexE <= 12;
        index1E <= 12;
        action_E <= '0';
        if videoOnE = '1' then
            stateE <= up_1;
        end if;
    when up_1 =>
        indexE <= indexE -1;
        action_E <= '1';
        if videoOnE = '1' then
            if indexE = 0 then
                indexE <= 0;
            end if;
        else
            if (videoOnE = '0' and indexE = 0) then
                stateE <= up_2;
            elsif (videoOnE = '0' and indexE /= 0 ) then
                stateE <= up_1_2;
            end if;
        end if;
    when up_2 => 
        indexE <= 0;
        if (videoOnE = '0' and index1E > 0) then
            stateE <= up_2;
            index1E <= index1E- 1;
            action_E <= '1';
        elsif (videoOnE = '0' and index1E = 0) then 
            stateE <= initial;
        end if;
    when up_1_2 => 
        if  (videoOnE = '0' and indexE /= 0) then
            stateE <= up_1_2;
              indexE <= indexE -1;
              index1E <= index1E - 1;
              action_E <= '1';
        elsif (videoOnE = '0' and indexE = 0) then
            stateE<= up_2;
        end if;
    end case;
end if;
end process;
------------------------------------FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF----------------------------
statec_processF: process(stateF,clk_note)
begin 
if rising_edge(clk_note) and play_enable = '1'  then
    next_stateF <= stateF;
    case stateF is
    when initial => 
        indexF <= 12;
        index1F <= 12;
        action_F <= '0';
        if videoOnF = '1' then
            stateF <= up_1;
        end if;
    when up_1 =>
        indexF <= indexF -1;
        action_F <= '1';
        if videoOnF = '1' then
           if indexF = 0 then
                indexF <= 0;
            end if; 
        else
            if (videoOnF = '0' and indexF = 0) then
                stateF <= up_2;
            elsif (videoOnF = '0' and indexF /= 0 ) then
                stateF <= up_1_2;
            end if;
        end if;
    when up_2 => 
        indexF <= 0;
        if (videoOnF = '0' and index1F > 0) then
            stateF <= up_2;
            index1F <= index1F- 1;
            action_F <= '1';
        elsif (videoOnF = '0' and index1F = 0) then 
            stateF <= initial;
        end if;
    when up_1_2 => 
        if  (videoOnF = '0' and indexF /= 0) then
            stateF <= up_1_2;
              indexF <= indexF -1;
              index1F <= index1F - 1;
              action_F <= '1';
        elsif (videoOnF = '0' and indexF = 0) then
            stateF<= up_2;
        end if;
    end case;
end if;
end process;

-----------------------------------GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG-------------------------------- 
statec_processG: process(stateG,clk_note)
begin 
if rising_edge(clk_note) and play_enable = '1'  then
    next_stateG <= stateG;
    case stateG is
    when initial => 
        indexG <= 12;
        index1G <= 12;
        action_G <= '0';
        if videoOnG = '1' then
            stateG <= up_1;
        end if;
    when up_1 =>
        indexG <= indexG -1;
        action_G <= '1';
        if videoOnG = '1' then
            if indexG = 0 then
                indexG <= 0;
            end if;
        else
            if (videoOnG = '0' and indexG = 0) then
                stateG <= up_2;
            elsif (videoOnG = '0' and indexG /= 0 ) then
                stateG <= up_1_2;
            end if;
        end if;
    when up_2 => 
        indexG <= 0;
        if (videoOnG = '0' and index1G > 0) then
            stateG <= up_2;
            index1G <= index1G- 1;
            action_G <= '1';
        elsif (videoOnG = '0' and index1G = 0) then 
            stateG <= initial;
        end if;
    when up_1_2 => 
        if  (videoOnG = '0' and indexG /= 0) then
            stateG <= up_1_2;
              indexG <= indexG -1;
              index1G <= index1G - 1;
              action_G <= '1';
        elsif (videoOnG = '0' and indexG = 0) then
            stateG<= up_2;
        end if;
    end case;
end if;
end process;


-------------------------------------------------------------------------------------------------------

note_memory: process(clk_note,videoOnA,videoOnG,videoOnB,videoOnC,videoOnF,videoOnE,videoOnD)
begin
    if rising_edge(clk_note) and play_enable = '1'  then
        if videoOnA = '1' and counter < 2 then
            note_playedA <= note;
        elsif  videoOnB = '1' and counter < 2 then
            note_playedB <= note;
        elsif  videoOnC = '1' and counter < 2 then
            note_playedC <= note;
        elsif  videoOnD = '1' and counter < 2 then
            note_playedD <= note;              
        elsif  videoOnE = '1' and counter < 2 then
            note_playedE <= note;               
        elsif  videoOnF = '1' and counter < 2 then                    
            note_playedF <= note;             
        elsif  videoOnG = '1' and counter < 2 then
            note_playedG <= note;              
        end if;
    end if;
end process;
instable_vpos_1_A <= vertical_data(indexA);
instable_vpos_2_A <= vertical_data(index1A);
instable_vpos_1_B <= vertical_data(indexB);
instable_vpos_2_B<= vertical_data(index1B);
instable_vpos_1_C <= vertical_data(indexC);
instable_vpos_2_C <= vertical_data(index1C);
instable_vpos_1_D <= vertical_data(indexD);
instable_vpos_2_D <= vertical_data(index1D);
instable_vpos_1_E <= vertical_data(indexE);
instable_vpos_2_E <= vertical_data(index1E);
instable_vpos_1_F <= vertical_data(indexF);
instable_vpos_2_F <= vertical_data(index1F);
instable_vpos_1_G <= vertical_data(indexG);
instable_vpos_2_G <= vertical_data(index1G);

draw:process(clk_note, RST, hPos, vPos,instable_vpos_1_E,instable_vpos_2_E,instable_vpos_1_F,instable_vpos_2_F,instable_vpos_1_G,instable_vpos_2_G,
             instable_vpos_1_A,instable_vpos_2_A,instable_vpos_1_B,instable_vpos_2_B,instable_vpos_1_C,instable_vpos_2_C,instable_vpos_1_D,instable_vpos_2_D )
begin
	if(RST = '1')then
		vga_red <= "0000";
		vga_green <= "0000";
		vga_blue <= "0000";
	elsif rising_edge(clk)  then
	   if play_enable = '1' then
	        if (vPos <= 145 and vPos >= 0) then 
	           if note_name(vPos /5)(hPos/5) = '0' then
                   vga_red <= "1111";
                   vga_green <= "1111";
                   vga_blue  <= "1111";	          
               else
                   vga_red <= "0000";
                   vga_green <= "0000";
                   vga_blue  <= "0000";
               end if;          
            elsif ((hPos >= 50 and hPos <= 202) or (hPos >= 248 and hPos <= 400) or (hPos >= 446 and hPos <= 598) or (hPos >= 644 and hPos <= 796) or
                 (hPos >= 841 and hPos <= 993) or (hPos >= 1039 and hPos <= 1191) or (hPos >= 1237 and hPos <= 1389)) and (vPos = 149  or vPos = 751) then 
                vga_red <= "1111";
                vga_green <= "1111";
                vga_blue  <= "1111";
            elsif (vPos >= 149 and vPos <= 751) and ((hPos = 50 or hPos = 202) or (hPos = 248 or hPos = 400) or (hPos = 446 or hPos = 598) or (hPos = 644 or hPos = 796) or
                                 (hPos = 841 or hPos = 993) or (hPos = 1039 or hPos = 1191) or (hPos = 1237 or hPos = 1389)) then
                 vga_red <= "1111";
                 vga_green <= "1111";
                 vga_blue  <= "1111";               
			elsif(hPos >= 51 and hPos <= 201) AND (vPos > instable_vpos_1_A and vPos <= instable_vpos_2_A) AND (note_playedA = "0000010") and action_A = '1' then
			---    signal_a  <= '1';
                vga_red <= "0000";
                vga_green <= "1111";
                vga_blue  <= "1111";
			elsif (hPos >= 249 and hPos <= 399) AND (vPos > instable_vpos_1_B and vPos <= instable_vpos_2_B) AND (note_playedB = "0000001")and action_B = '1'then
                vga_red <= "0000";
                vga_green <= "1111";
                vga_blue  <= "1111";
			elsif (hPos >= 447 and hPos <= 597) AND (vPos > instable_vpos_1_C and vPos <= instable_vpos_2_C) AND (note_playedC = "1000000")and action_C = '1'then
                vga_red <= "0000";
                vga_green <= "1111";
                vga_blue  <= "1111";
			elsif (hPos >= 645 and hPos <= 795) AND (vPos > instable_vpos_1_D and vPos <= instable_vpos_2_D) AND (note_playedD = "0100000")and action_D = '1'then
                vga_red <= "0000";
                vga_green <= "1111";
                vga_blue  <= "1111";
			elsif (hPos >= 842 and hPos <= 992) AND (vPos > instable_vpos_1_E and vPos <= instable_vpos_2_E) AND (note_playedE = "0010000")and action_E = '1'then
                vga_red <= "0000";
                vga_green <= "1111";
                vga_blue  <= "1111";
			elsif (hPos >= 1040 and hPos <= 1190) AND (vPos > instable_vpos_1_F and vPos <= instable_vpos_2_F) AND (note_playedF = "0001000")and action_F = '1'then
                vga_red <= "0000";
                vga_green <= "1111";
                vga_blue  <= "1111";
			elsif (hPos >= 1238 and hPos <= 1388) AND (vPos > instable_vpos_1_G and vPos <= instable_vpos_2_G) AND (note_playedG = "0000100")and action_G = '1'then
                vga_red <= "0000";
                vga_green <= "1111";
                vga_blue  <= "1111";
            else
                vga_red <= "0000";
                vga_green <= "0000";
                vga_blue <= "0000";
            end if;
        else
            vga_red <= "0000";
            vga_green <= "0000";
            vga_blue <= "0000";
        end if;	
	end if;
end process;
end Behavioral;
